Unit Testing and SPOCK

1. Look up java plugin documentation. Make changes in manifest to make it executable with correct class. When run using java -jar JAR_NAME_HERE the output should be text "Hello World" on the console.


 






URL: https://docs.gradle.org/current/userguide/java_plugin.html



2. Look up idea plugin. make changes in build.gradle so that the sources of src/main/java as well as src/main/java2 are taken as sources. Ensure that when you make JAR file class files in both are added to the JAR. This will teach you how projects with non-conventional structure can be used with gradle.


URL: https://docs.gradle.org/current/userguide/idea_plugin.html


3. Add 2 files file1.xml and file1.txt in src/main/resources manually. make changes so that when creating jar only file1.xml is added to the jar.










URL: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.SourceSet.html








4. Find how to what is an uberjar. Make changes so you can use commons lang3 StringUtil in your jar. Make this uber jar executable. The output should be text but that should be using the StringUtils class of commons lang3



URL: https://www.baeldung.com/gradle-fat-jar


5. Find a maven repository and add it as a repository. You can use bintray, jcenter



URL: https://mvnrepository.com/artifact/org.springframework/spring-aop

https://docs.gradle.org/current/userguide/declaring_repositories.html




6. Write a task in file "mytasks.gradle" and use it in your build.gradle





